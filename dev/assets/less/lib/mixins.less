/* ==========================================================================
    Mixins
   ========================================================================== */


/*  Helper Classes
   ========================================================================== */

.cf {
    &:before,
    &:after {
        content: " ";
        display: table;
    }

    &:after { clear: both }
}

.ir {
    background-color: transparent;
    border: 0;
    overflow: hidden;

    &:before {
        width: 0;
        height: 150%;
        display: block;
        content: " ";
    }
}

.ir-old {
    overflow: hidden;
    text-indent: 100%;
    white-space: nowrap;
}

/* ====[ Alignment] ==== */

.left { float: left !important }

.right { float: right !important }

.clear { clear: both !important }

.hidden {
    display: none !important;
    visibility: hidden;
}

.inline-block { display: inline-block }

.align-left { text-align: left !important }

.align-center { text-align: center !important }

.align-right { text-align: right !important }

.vertical-align {
    position: relative;
    top: 50%;
    .transform(translateY(-50%));
}

/* ====[ Visibility] ==== */

.visible { display: block !important }

.invisible { visibility: hidden }

.vh {
    width: 1/@em;
    height: 1/@em;
    margin: -1/@em;
    padding: 0;
    overflow: hidden;
    position: absolute;
    clip: rect(0 0 0 0);
    border: 0;

    &.focusable {
        &:active,
        &:focus {
            width: auto;
            height: auto;
            margin: 0;
            overflow: visible;
            position: static;
            clip: auto;
        }
    }
}


/*  Helpful Mixins
   ========================================================================== */

.em-font-size( @value: @base-font-size, @context: @base-font-size ) {
    font-size: (@value / @context) + 0em;
}

.box-shadow(@shadow) {
    -webkit-box-shadow: @shadow;
    box-shadow: @shadow;
}

.double-box-shadow(@s1, @s2) {
    -webkit-box-shadow: @s1, @s2;
    box-shadow: @s1, @s2;
}

.border-radius(@radius: 4px) {
    border-top-left-radius: @radius;
    border-top-right-radius: @radius;
    border-bottom-left-radius: @radius;
    border-bottom-right-radius: @radius;
}

.padding-box(@clip: padding-box) {
    -webkit-background-clip: @clip;
    -moz-background-clip: @clip;
    background-clip: @clip;
}

.box-sizing(@sizing: border-box) {
    -webkit-box-sizing: @sizing;
    -moz-box-sizing: @sizing;
    -ms-box-sizing: @sizing;
    box-sizing: @sizing;
}

.background-size(@size: contain) {
    -webkit-background-size: @size;
    -moz-background-size: @size;
    background-size: @size;
}

.user-select(@select: none) {
    -webkit-user-select: @select;
    -moz-user-select: @select;
    -ms-user-select: @select;
    user-select: @select;
}

.opacity(@alpha: 70) {
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=@{alpha})";
    filter: ~"alpha(opacity="@alpha~")";
    opacity: @alpha/100;
}

.transition(@transition: all .15s linear) {
    -webkit-transition: @transition;
    -moz-transition: @transition;
    -o-transition: @transition;
    -ms-transition: @transition;
    transition: @transition;
}

.rotate(@deg: 90deg) {
    -webkit-transform: rotate(@deg);
    -moz-transform: rotate(@deg);
    -o-transform: rotate(@deg);
    -ms-transform: rotate(@deg);
    transform: rotate(@deg);
}

.skew(@deg: 15deg) {
    -webkit-transform: skew(@deg);
    -moz-transform: skew(@deg);
    -o-transform: skew(@deg);
    -ms-transform: skew(@deg);
    transform: skew(@deg);
}

.perspective(@perspective: 1000px) {
    -webkit-perspective: @perspective;
    -moz-perspective: @perspective;
    -o-perspective: @perspective;
    -ms-perspective: @perspective;
    perspective: @perspective;
}

.transform(@string) {
    -webkit-transform: @string;
    -moz-transform: @string;
    -o-transform: @string;
    -ms-transform: @string;
    transform: @string;
}

.transform-origin(@string) {
    -webkit-transform-origin: @string;
    -moz-transform-origin: @string;
    -o-transform-origin: @string;
    -ms-transform-origin: @string;
    transform-origin: @string;
}

.gradient(@c1, @c2, @pos: top, @pos-ie: 0) {
    background-color: @c1;
    filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorStr="@c1~", EndColorStr="@c2~", GradientType="@pos-ie~")";
    background-image: -webkit-linear-gradient(@pos, @c1 0%,@c2 100%);
    background-image: -moz-linear-gradient(@pos, @c1 0%,@c2 100%);
    background-image: -o-linear-gradient(@pos, @c1 0%,@c2 100%);
    background-image: -ms-linear-gradient(@pos, @c1 0%,@c2 100%);
    background-image: linear-gradient(@pos, @c1 0%,@c2 100%);
}

.gradient-stop(@c1, @pos-1, @c2, @pos-2, @c3, @pos-3, @c4, @pos-4) {
    background-color: @c1;
    filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorStr="@c1~", EndColorStr="@c4~", GradientType=0)";
    background-image: -moz-linear-gradient(top, @c1 @pos-1, @c2 @pos-2, @c3 @pos-3, @c4 @pos-4);
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(@pos-1, @c1), color-stop(@pos-2, @c2), color-stop(@pos-3, @c3), color-stop(@pos-4, @c4));
    background-image: -webkit-linear-gradient(top, @c1 @pos-1, @c2 @pos-2, @c3 @pos-3, @c4 @pos-4);
    background-image: -o-linear-gradient(top, @c1 @pos-1, @c2 @pos-2, @c3 @pos-3, @c4 @pos-4);
    background-image: -ms-linear-gradient(top, @c1 @pos-1, @c2 @pos-2, @c3 @pos-3, @c4 @pos-4);
    background-image: linear-gradient(top, @c1 @pos-1, @c2 @pos-2, @c3 @pos-3, @c4 @pos-4);
}

.background-image(...) {
    @process_ms: ~`(function(value){function base64_encode(data){var o1,o2,o3,h1,h2,h3,h4,bits,b64="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",i=0,ac=0,enc="",tmp_arr=[];if(!data)return data;do o1=data.charCodeAt(i++),o2=data.charCodeAt(i++),o3=data.charCodeAt(i++),bits=o1<<16|o2<<8|o3,h1=63&bits>>18,h2=63&bits>>12,h3=63&bits>>6,h4=63&bits,tmp_arr[ac++]=b64.charAt(h1)+b64.charAt(h2)+b64.charAt(h3)+b64.charAt(h4);while(i<data.length);enc=tmp_arr.join("");var r=data.length%3;return(r?enc.slice(0,r-3):enc)+"===".slice(r||3)}if(value=value||8121991,8121991==value)return value;var gradients=/linear|radial/g.test(value)&&value.split(/,(?=\s*(?:linear|radial|url))/g),svg_gradients=[],values={"to bottom":'x1="0%" y1="0%" x2="0%" y2="100%"',"to left":'x1="100%" y1="0%" x2="0%" y2="0%"',"to top":'x1="0%" y1="100%" x2="0%" y2="0%"',"to right":'x1="0%" y1="0%" x2="100%" y2="0%"',get"top"(){return this["to bottom"]},get"180deg"(){return this["to bottom"]},get"right"(){return this["to left"]},get"270deg"(){return this["to left"]},get"bottom"(){return this["to top"]},get"0deg"(){return this["to top"]},get"left"(){return this["to right"]},get"90deg"(){return this["to right"]},"-45deg":'x1="0%" y1="0%" x2="100%" y2="100%"',"45deg":'x1="0%" y1="100%" x2="100%" y2="0%"',"ellipse at center":'cx="50%" cy="50%" r="75%"'},svg={uri_data:"url(data:image/svg+xml;base64,",xml:'<?xml version="1.0" ?>',svg_start:'<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 1 1" preserveAspectRatio="none">',linear_gradient_start:'<linearGradient id="lesshat-generated" gradientUnits="userSpaceOnUse"',radial_gradient_start:'<radialGradient id="lesshat-generated" gradientUnits="userSpaceOnUse"',linear_gradient_end:"</linearGradient>",radial_gradient_end:"</radialGradient>",rect_linear:'<rect x="0" y="0" width="1" height="1" fill="url(#lesshat-generated)" />',rect_radial:'<rect x="-50" y="-50" width="101" height="101" fill="url(#lesshat-generated)" />',svg_end:"</svg>"};if(gradients.length){gradients.forEach(function(gradient){var obj={};if(Object.keys(values).some(function(inner_val){return gradient.indexOf(inner_val)>=0?(obj.svg_direction=values[inner_val],!0):(obj.svg_direction=!1,void 0)}),/linear/.test(gradient))obj.svg_type="linear";else if(/radial/.test(gradient))obj.svg_type="radial";else if(!/linear/.test(gradient)&&!/radial/.test(gradient))return obj.url=gradient.trim(),obj.svg_type="url",obj.svg_direction=!0,svg_gradients.push(obj),!1;var colors_count=gradient.match(/rgb|#[a-zA-Z0-9]|hsl/g).length;if(obj.svg_stops=[],gradient.match(/#[a-zA-Z0-9]/g)&&gradient.match(/#[a-zA-Z0-9]/g).length==colors_count)if(gradient.match(/#[a-zA-Z0-9]+\s+(\d+%)/g)&&gradient.match(/#[a-zA-Z0-9]+\s+(\d+%)/g).length==colors_count)gradient.match(/#[a-zA-Z0-9]+\s+(\d+%)/g).forEach(function(inner_val){inner_val=inner_val.split(" "),obj.svg_stops.push('<stop offset="'+inner_val[1]+'" stop-color="'+inner_val[0]+'" stop-opacity="1"/>')});else{var shares=Math.floor(100/(gradient.match(/#[a-zA-Z0-9]/g).length-1));gradient.match(/#[a-zA-Z0-9]+/g).forEach(function(inner_val,index){obj.svg_stops.push('<stop offset="'+shares*index+'%" stop-color="'+inner_val+'" stop-opacity="1"/>')})}if(gradient.match(/rgba?\(\d+,\s*\d+,\s*\d+(?:,\s*(0|1|\.\d+|0\.\d+))?\)/g)&&gradient.match(/(?:rgb|rgba)?\(\d+,\s*\d+,\s*\d+(?:,\s*(0|1|\.\d+|0\.\d+))?\)/g).length==colors_count)if(gradient.match(/rgba?\(\d+,\s*\d+,\s*\d+(?:,\s*(0|1|\.\d+|0\.\d+))?\)\s+\d+%+/g)&&gradient.match(/rgba?\(\d+,\s*\d+,\s*\d+(?:,\s*(0|1|\.\d+|0\.\d+))?\)\s+\d+%+/g).length==colors_count)gradient.replace(/rgba?\((\d+,\s*\d+,\s*\d+)(?:,\s*(0|1|\.\d+|0\.\d+))?\)\s+(\d+%)+/g,function(match,sub,sub_2,sub_3){obj.svg_stops.push('<stop offset="'+sub_3+'" stop-color="rgb('+sub+')" stop-opacity="'+(sub_2||1)+'"/>')});else{var shares=Math.floor(100/(gradient.match(/(rgb|rgba)\(/g).length-1));gradient.match(/rgba?\((\d+,\s*\d+,\s*\d+)(?:,\s*(0|1|\.\d+|0\.\d+))?\)/g).forEach(function(element,index){element.replace(/rgba?\((\d+,\s*\d+,\s*\d+)(?:,\s*(0|1|\.\d+|0\.\d+))?\)/g,function(match,sub,sub_2){obj.svg_stops.push('<stop offset="'+shares*index+'%" stop-color="rgb('+sub+')" stop-opacity="'+(sub_2||1)+'"/>')})})}if(gradient.match(/hsla?\((\d+,\s*\d+%,\s*\d+%),\s*(0|1|\.\d+|0\.\d+)\)/g)&&gradient.match(/hsla?\((\d+,\s*\d+%,\s*\d+%),\s*(0|1|\.\d+|0\.\d+)\)/g).length==colors_count)if(gradient.match(/hsla?\((\d+,\s*\d+%,\s*\d+%),\s*(0|1|\.\d+|0\.\d+)\)\s*(\d+%)+/g)&&gradient.match(/hsla?\((\d+,\s*\d+%,\s*\d+%),\s*(0|1|\.\d+|0\.\d+)\)\s*(\d+%)+/g).length==colors_count)gradient.replace(/hsla?\((\d+,\s*\d+%,\s*\d+%),\s*(0|1|\.\d+|0\.\d+)\)\s*(\d+%)+/g,function(match,sub,sub_2,sub_3){obj.svg_stops.push('<stop offset="'+sub_3+'" stop-color="hsl('+sub+')" stop-opacity="'+(sub_2||1)+'"/>')});else{var shares=Math.floor(100/(gradient.match(/(hsl|hsla)\(/g).length-1));gradient.match(/hsla?\((\d+,\s*\d+%,\s*\d+%),\s*(0|1|\.\d+|0\.\d+)\)/g).forEach(function(element,index){element.replace(/hsla?\((\d+,\s*\d+%,\s*\d+%),\s*(0|1|\.\d+|0\.\d+)\)/g,function(match,sub,sub_2){obj.svg_stops.push('<stop offset="'+shares*index+'%" stop-color="hsl('+sub+')" stop-opacity="'+(sub_2||1)+'"/>')})})}svg_gradients.push(obj)});var syntax=[],passed=svg_gradients.every(function(element){for(var i in element)if(0==element[i]||0==element[i].length)return!1;return!0});if(!passed)return 8121991;svg_gradients.forEach(function(element,index){("linear"==element.svg_type||"radial"==element.svg_type)&&(syntax[index]=svg.xml+svg.svg_start),"linear"==element.svg_type?(syntax[index]+=svg.linear_gradient_start+" "+element.svg_direction+">",element.svg_stops.forEach(function(value){syntax[index]+=value}),syntax[index]+=svg.linear_gradient_end,syntax[index]+=svg.rect_linear,syntax[index]+=svg.svg_end):"radial"==element.svg_type?(syntax[index]+=svg.radial_gradient_start+" "+element.svg_direction+">",element.svg_stops.forEach(function(value){syntax[index]+=value}),syntax[index]+=svg.radial_gradient_end,syntax[index]+=svg.rect_radial,syntax[index]+=svg.svg_end):"url"==element.svg_type&&(syntax[index]=element.url)}),syntax.forEach(function(element,index){/<\?xml version="1.0" \?>/g.test(element)&&(syntax[index]=svg.uri_data+base64_encode(element)+")")}),value=syntax.join(",")}return value})((function(){var args="@{arguments}";return args=args.replace(/^\[|\]$/g,"")})())`;
    @process_webkit: ~`(function(value){if(value=value||8121991,8121991==value)return value;var values={"to bottom":"top","to left":"right","to top":"bottom","to right":"left","ellipse at center":"center, ellipse cover","circle closest-side":"center center, circle contain","circle farthest-corner":"center center, circle cover","circle farthest-side":"center center, circle cover","ellipse closest-side":"center center, ellipse contain","ellipse farthest-corner":"center center, ellipse cover","ellipse farthest-side":"center center, ellipse cover"},radial_regexp=/(radial-gradient\()([a-z- ]+)at\s+(\w+)\s*(\w*)/g,values_keys=Object.keys(values);return values_keys.some(function(el){return value.indexOf(el)>=0?(value=value.replace(new RegExp(el+"(?![ a-z0-9])","g"),values[el]),!0):(radial_regexp.test(value)&&(value=value.replace(radial_regexp,function(match,sub,sub2,sub3,sub4){return sub.trim()+sub3.trim()+" "+sub4.trim()+","+sub2.replace(/closest-side/g,"contain").replace(/farthest-corner/g,"cover").trim()})),void 0)}),value=value.replace(/(\d+)\s*deg/g,function(match,sub){return 90-sub+"deg"}).replace(/(linear|radial)-gradient/g,"-webkit-$1-gradient")})((function(){var args="@{arguments}";return args=args.replace(/^\[|\]$/g,"")})())`;
    @process_moz: ~`(function(value){if(value=value||8121991,8121991==value)return value;var values={"to bottom":"top","to left":"right","to top":"bottom","to right":"left","ellipse at center":"center, ellipse cover","circle closest-side":"center center, circle contain","circle farthest-corner":"center center, circle cover","circle farthest-side":"center center, circle cover","ellipse closest-side":"center center, ellipse contain","ellipse farthest-corner":"center center, ellipse cover","ellipse farthest-side":"center center, ellipse cover"},radial_regexp=/(radial-gradient\()([a-z- ]+)at\s+(\w+)\s*(\w*)/g,values_keys=Object.keys(values);return values_keys.some(function(el){return value.indexOf(el)>=0?(value=value.replace(new RegExp(el+"(?![ a-z0-9])","g"),values[el]),!0):(radial_regexp.test(value)&&(value=value.replace(radial_regexp,function(match,sub,sub2,sub3,sub4){return sub.trim()+sub3.trim()+" "+sub4.trim()+","+sub2.replace(/closest-side/g,"contain").replace(/farthest-corner/g,"cover").trim()})),void 0)}),value=value.replace(/(\d+)\s*deg/g,function(match,sub){return 90-sub+"deg"}).replace(/(linear|radial)-gradient/g,"-moz-$1-gradient")})((function(){var args="@{arguments}";return args=args.replace(/^\[|\]$/g,"")})())`;
    @process_opera: ~`(function(value){if(value=value||8121991,8121991==value)return value;var values={"to bottom":"top","to left":"right","to top":"bottom","to right":"left","ellipse at center":"center, ellipse cover","circle closest-side":"center center, circle contain","circle farthest-corner":"center center, circle cover","circle farthest-side":"center center, circle cover","ellipse closest-side":"center center, ellipse contain","ellipse farthest-corner":"center center, ellipse cover","ellipse farthest-side":"center center, ellipse cover"},radial_regexp=/(radial-gradient\()([a-z- ]+)at\s+(\w+)\s*(\w*)/g,values_keys=Object.keys(values);return values_keys.some(function(el){return value.indexOf(el)>=0?(value=value.replace(new RegExp(el+"(?![ a-z0-9])","g"),values[el]),!0):(radial_regexp.test(value)&&(value=value.replace(radial_regexp,function(match,sub,sub2,sub3,sub4){return sub.trim()+sub3.trim()+" "+sub4.trim()+","+sub2.replace(/closest-side/g,"contain").replace(/farthest-corner/g,"cover").trim()})),void 0)}),value=value.replace(/(\d+)\s*deg/g,function(match,sub){return 90-sub+"deg"}).replace(/(linear|radial)-gradient/g,"-o-$1-gradient")})((function(){var args="@{arguments}";return args=args.replace(/^\[|\]$/g,"")})())`;
    @process: ~`(function(value){if(value=value||8121991,8121991==value)return value;var values={top:"to bottom",right:"to left",bottom:"to top",left:"to right"},values_keys=Object.keys(values);return values_keys.some(function(el){return value.indexOf(el)>=0&&!new RegExp("to\\s+"+el,"g").test(value)?(value=value.replace(new RegExp(el),values[el]),!0):void 0}),value})((function(){var args="@{arguments}";return args=args.replace(/^\[|\]$/g,"")})())`;

    .result (@arguments, @signal, @boolean, @local_boolean) when (@boolean = true) and (@local_boolean = true) {
    .inception (@signal, @arguments) when (@signal = 1) and (isstring(@process_ms)) and not (iscolor(@process_ms)) and not (isnumber(@process_ms)) and not (iskeyword(@process_ms)) and not (isurl(@process_ms)) and not (ispixel(@process_ms)) and not (ispercentage(@process_ms)) and not (isem(@process_ms)) { background-image: @process_ms; }
        .inception (@signal, @arguments) when (@signal = 1) and not (isstring(@process_ms)) and not (iscolor(@process_ms)) and not (isnumber(@process_ms)) and not (iskeyword(@process_ms)) and not (isurl(@process_ms)) and not (ispixel(@process_ms)) and not (ispercentage(@process_ms)) and not (isem(@process_ms)) {}
    .inception (@signal, @arguments) when (@signal = 2) and (isstring(@process_webkit)) and not (iscolor(@process_webkit)) and not (isnumber(@process_webkit)) and not (iskeyword(@process_webkit)) and not (isurl(@process_webkit)) and not (ispixel(@process_webkit)) and not (ispercentage(@process_webkit)) and not (isem(@process_webkit)) { background-image: @process_webkit; }
        .inception (@signal, @arguments) when (@signal = 2) and not (isstring(@process_webkit)) and not (iscolor(@process_webkit)) and not (isnumber(@process_webkit)) and not (iskeyword(@process_webkit)) and not (isurl(@process_webkit)) and not (ispixel(@process_webkit)) and not (ispercentage(@process_webkit)) and not (isem(@process_webkit)) {}
    .inception (@signal, @arguments) when (@signal = 3) and (isstring(@process_moz)) and not (iscolor(@process_moz)) and not (isnumber(@process_moz)) and not (iskeyword(@process_moz)) and not (isurl(@process_moz)) and not (ispixel(@process_moz)) and not (ispercentage(@process_moz)) and not (isem(@process_moz)) { background-image: @process_moz; }
        .inception (@signal, @arguments) when (@signal = 3) and not (isstring(@process_moz)) and not (iscolor(@process_moz)) and not (isnumber(@process_moz)) and not (iskeyword(@process_moz)) and not (isurl(@process_moz)) and not (ispixel(@process_moz)) and not (ispercentage(@process_moz)) and not (isem(@process_moz)) {}
    .inception (@signal, @arguments) when (@signal = 4) and (isstring(@process_opera)) and not (iscolor(@process_opera)) and not (isnumber(@process_opera)) and not (iskeyword(@process_opera)) and not (isurl(@process_opera)) and not (ispixel(@process_opera)) and not (ispercentage(@process_opera)) and not (isem(@process_opera)) { background-image: @process_opera; }
        .inception (@signal, @arguments) when (@signal = 4) and not (isstring(@process_opera)) and not (iscolor(@process_opera)) and not (isnumber(@process_opera)) and not (iskeyword(@process_opera)) and not (isurl(@process_opera)) and not (ispixel(@process_opera)) and not (ispercentage(@process_opera)) and not (isem(@process_opera)) {}
    .inception (@signal, @arguments) when (@signal = 5) and (isstring(@process)) and not (iscolor(@process)) and not (isnumber(@process)) and not (iskeyword(@process)) and not (isurl(@process)) and not (ispixel(@process)) and not (ispercentage(@process)) and not (isem(@process)) { background-image: @process; }
        .inception (@signal, @arguments) when (@signal = 5) and not (isstring(@process)) and not (iscolor(@process)) and not (isnumber(@process)) and not (iskeyword(@process)) and not (isurl(@process)) and not (ispixel(@process)) and not (ispercentage(@process)) and not (isem(@process)) {}
    .inception(@signal, @arguments);
    }
    .result (@arguments, @signal, @boolean, @local_boolean) when not (@boolean = true), not (@local_boolean = true) {}

    .result(@arguments, 1, true, true);
    .result(@arguments, 2, true, true);
    .result(@arguments, 3, true, true);
    .result(@arguments, 4, true, true);
    .result(@arguments, 5, true, true);
}
